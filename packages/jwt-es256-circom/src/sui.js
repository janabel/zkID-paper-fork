const latest_token =
  "eyJqa3UiOiJodHRwczovL2lzc3Vlci12Yy53YWxsZXQuZ292LnR3L2FwaS9rZXlzIiwia2lkIjoia2V5LTEiLCJ0eXAiOiJ2YytzZC1qd3QiLCJhbGciOiJFUzI1NiJ9.eyJzdWIiOiJkaWQ6a2V5OnoyZG16RDgxY2dQeDhWa2k3SmJ1dU1tRllyV1BvZHJaU3FNYkN5OU5kdTRVZ1VHeTNSTmtoSDQ3OWVMUHBiZkFoVlNOdTdCNG9KdlV3THp5eGlQNEp0NWs5Y3FxbUNoYW54QWF6VEd4Sk12R3hZREFwTmtYZURXNU1QWmdaUmtqUmdEMXlhaWc1S0NFZ0FhVmJnOHpydllqTVRpMUJ6cWREcFBwa2VTRm1Kd2llajlZTlkiLCJuYmYiOjE3NDg0NDk5OTksImlzcyI6ImRpZDprZXk6ejJkbXpEODFjZ1B4OFZraTdKYnV1TW1GWXJXUGdZb3l0eWtVWjNleXFodDFqOUticlRRV1BUSk10MkZ1MTZIODR5bXdiYkc5TEdOaW5XN1luajUzWkNBVzE2Z3JBaEJpd3Y1M0FuYnY3ODdodDZueGFLTUdHQWdZOVdqdEZ4WVozaGpHZE1kMVNodVFvU3ZOZVh4Y2o1SmNiazJ1WXRmR2J3aW9GU2laUVhmekg3Y3RoaSIsImNuZiI6eyJqd2siOnsia3R5IjoiRUMiLCJjcnYiOiJQLTI1NiIsIngiOiI0OXJrcUxQb2JSRWdjcDZSSHpKNTJsNWdjQXpmSG9yZWVXbWtMTTdhQzJ3IiwieSI6IlQ2SFB5OWZnN1FOV2RvTWt2UFVOajBLeFgtUVIzeS14NUdKbmtnc2hzZnMifX0sImV4cCI6MjA2Mzk4Mjc5OSwidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiXSwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsIjAwMDAwMDAwX2RlbW9fZHJpdmluZ2xpY2Vuc2VfMjAyNTA0MjUxNDE4Il0sImNyZWRlbnRpYWxTdGF0dXMiOnsidHlwZSI6IlN0YXR1c0xpc3QyMDIxRW50cnkiLCJpZCI6Imh0dHBzOi8vaXNzdWVyLXZjLndhbGxldC5nb3YudHcvYXBpL3N0YXR1cy1saXN0LzAwMDAwMDAwX2RlbW9fZHJpdmluZ2xpY2Vuc2VfMjAyNTA0MjUxNDE4L3IwIzIwIiwic3RhdHVzTGlzdEluZGV4IjoiMjAiLCJzdGF0dXNMaXN0Q3JlZGVudGlhbCI6Imh0dHBzOi8vaXNzdWVyLXZjLndhbGxldC5nb3YudHcvYXBpL3N0YXR1cy1saXN0LzAwMDAwMDAwX2RlbW9fZHJpdmluZ2xpY2Vuc2VfMjAyNTA0MjUxNDE4L3IwIiwic3RhdHVzUHVycG9zZSI6InJldm9jYXRpb24ifSwiY3JlZGVudGlhbFNjaGVtYSI6eyJpZCI6Imh0dHBzOi8vZnJvbnRlbmQud2FsbGV0Lmdvdi50dy9hcGkvc2NoZW1hLzAwMDAwMDAwL2RlbW9kcml2aW5nbGljZW5zZTIwMjUwNDI1MTQxOC9WMS9iNjUzYWQ0Yi0zYjNhLTQ2ZjktYmVjMi1kNjg3Y2U5YzMyMjIiLCJ0eXBlIjoiSnNvblNjaGVtYSJ9LCJjcmVkZW50aWFsU3ViamVjdCI6eyJfc2QiOlsiQWVsYmY0WVl0YzhCRGZhck9NMlA5NWRocHBMWU9rb2hmNkR0Z1VqZmhZVSIsIkdPdjR1Y0pjS0drMEVfb0UwZ2VJbXhTRjg5bm5IcHotUWJOclZWOXcyUm8iLCJMSkxCaGVHa3VFU1N1RXlHQkJ2U01XOXRiMHFab1B1NUtrZjVnMUMzQmZrIiwiWS0tUWIyOG5kcUVHX2YtSEdLczZvMnJJUVpVUGd2RmticWJxTGhzY0hjZyIsImNWMGROYm0wNTlfSEo2c000bkM2eUVSNE1neTdneVV2SVlGUG8tc3U0RkUiLCJyZTU0VTFZZHV5alhXLTQwVlIxc2U5cVhZM081U19UdDFpSzNsUXlUa0Y4Il0sIl9zZF9hbGciOiJzaGEtMjU2In19LCJub25jZSI6Ikk5UTBPQzNOIiwianRpIjoiaHR0cHM6Ly9pc3N1ZXItdmMud2FsbGV0Lmdvdi50dy9hcGkvY3JlZGVudGlhbC9iNzZiOTg4OC01MTFmLTQ5YTAtYjI2Yi0yYjU4YzhjNTczMDIifQ.eGndfGnmzkxRoVMLJaLVZiqxmpiccnMcdq1ytef72fGSRyqSY_tz6EF7nlyNH9FsSOBCZ6RKgfPk6HGNbk3SKg";
const old_token =
  "eyJqa3UiOiJodHRwczovL2lzc3Vlci12Yy11YXQud2FsbGV0Lmdvdi50dy9hcGkva2V5cyIsImtpZCI6ImtleS0xIiwidHlwIjoidmMrc2Qtand0IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJkaWQ6a2V5OnpZcU52VkNrWVhhTXNGVVhEemJvRk1DMXRSV0ZjOHBUTGRONTgzb3FhcG9LNk1veno5dEVWVWpYU2lDN3Y2eXlOR0I4TW5DZUh1SE5hWlpzczFYS1E5dktzY2EyN0VIM0NQTXFSSnN5b2pqdXRyNEtrMzJaWVE0TDRjdHpZaDVHMWhrR1I3VFlhQ0Q3ekczWU1WS0V2dWQxejhZVnR5N2lxZzhBVTZxQ3hvS25ibkVVNnJEQSIsIm5iZiI6MTczOTgxNjY3MiwiaXNzIjoiZGlkOmtleTp6MmRtekQ4MWNnUHg4VmtpN0pidXVNbUZZcldQZ1lveXR5a1VaM2V5cWh0MWo5S2JzWTlEUnFTQ2d6elJ1RmJwcTlxd0pUTGtCbm1tQlhoZFNkcTZCREpSTXg2dENHMWp0a2R3Z0tYTmZOMXFXRVJEdnhhYzVyWTZoY25GUDdIdjYzaU01eTNWeHRNTjRUc3h5WnZibnJhcFcyUnBGb3ZFMURKNG03ZURWTFN1cUd0YzFpIiwiY25mIjp7Imp3ayI6eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6IlBrcV82ZDJpeUIwZGVvalYyLXlta0ZWeUpNeElfTDlHZVF4aDBORExoNDQ9IiwieSI6IjBOZnFMdmUtSXEwSFZZUE11eEctWHpRNUlmNktaOFhvQ0hkNmZOaDhsZFU9In19LCJleHAiOjY3OTc3NzcxODcyLCJ2YyI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSJdLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiOTM1ODE5MjVfZGQiXSwiY3JlZGVudGlhbFN0YXR1cyI6eyJ0eXBlIjoiU3RhdHVzTGlzdDIwMjFFbnRyeSIsImlkIjoiaHR0cHM6Ly9pc3N1ZXItdmMtdWF0LndhbGxldC5nb3YudHcvYXBpL3N0YXR1cy1saXN0LzkzNTgxOTI1X2RkL3IwIzYiLCJzdGF0dXNMaXN0SW5kZXgiOiI2Iiwic3RhdHVzTGlzdENyZWRlbnRpYWwiOiJodHRwczovL2lzc3Vlci12Yy11YXQud2FsbGV0Lmdvdi50dy9hcGkvc3RhdHVzLWxpc3QvOTM1ODE5MjVfZGQvcjAiLCJzdGF0dXNQdXJwb3NlIjoicmV2b2NhdGlvbiJ9LCJjcmVkZW50aWFsU2NoZW1hIjp7ImlkIjoiaHR0cHM6Ly9mcm9udGVuZC11YXQud2FsbGV0Lmdvdi50dy9hcGkvc2NoZW1hLzkzNTgxOTI1L2RkL1YxL2Q0ZDFhMGY5LTNmMDktNGMyZS1iODk5LTA4YzM0NDkwYzhlYSIsInR5cGUiOiJKc29uU2NoZW1hIn0sImNyZWRlbnRpYWxTdWJqZWN0Ijp7Il9zZCI6WyJKY2lHYzViS2lkT0dteGp1dkM4TGRVeWthVlhCWEJQaEJYMWtYcERlLUxvIiwicFZPdzJOajU3RzJOa2VWSEJDV3doRUJqdWZTSmhwOWxwM201VzltQWg5QSJdLCJfc2RfYWxnIjoic2hhLTI1NiJ9fSwibm9uY2UiOiJCSElDVTI2TiIsImp0aSI6Imh0dHBzOi8vaXNzdWVyLXZjLXVhdC53YWxsZXQuZ292LnR3L2FwaS9jcmVkZW50aWFsLzRmYzNiYTY1LTY1ZGQtNDEyNC05ZTczLWNhOWY0OWNkNzc2NyJ9.h0wBjwjBDb48wZ_XVWnnrRrWh2Sgd4Lq7sc72N54svJFklnFuHebxvn-Ui6jftnQbPnLTKEyJbE75DatCkfkdQ";

const newk =
  "eyJqa3UiOiJodHRwczovL2lzc3Vlci12Yy53YWxsZXQuZ292LnR3L2FwaS9rZXlzIiwia2lkIjoia2V5LTEiLCJ0eXAiOiJ2YytzZC1qd3QiLCJhbGciOiJFUzI1NiJ9.eyJzdWIiOiJkaWQ6a2V5OnoyZG16RDgxY2dQeDhWa2k3SmJ1dU1tRllyV1BvZHJaU3FNYkN5OU5kdTRVZ1VHeTNSTmtoSDQ3OWVMUHBiZkFoVlNOdTdCNG9KdlV3THp5eGlQNEp0NWs5Y3FxbUNoYW54QWF6VEd4Sk12R3hZREFwTmtYZURXNU1QWmdaUmtqUmdEMXlhaWc1S0NFZ0FhVmJnOHpydllqTVRpMUJ6cWREcFBwa2VTRm1Kd2llajlZTlkiLCJuYmYiOjE3NDgzNjY5NTMsImlzcyI6ImRpZDprZXk6ejJkbXpEODFjZ1B4OFZraTdKYnV1TW1GWXJXUGdZb3l0eWtVWjNleXFodDFqOUticlRRV1BUSk10MkZ1MTZIODR5bXdiYkc5TEdOaW5XN1luajUzWkNBVzE2Z3JBaEJpd3Y1M0FuYnY3ODdodDZueGFLTUdHQWdZOVdqdEZ4WVozaGpHZE1kMVNodVFvU3ZOZVh4Y2o1SmNiazJ1WXRmR2J3aW9GU2laUVhmekg3Y3RoaSIsImNuZiI6eyJqd2siOnsia3R5IjoiRUMiLCJjcnYiOiJQLTI1NiIsIngiOiI0OXJrcUxQb2JSRWdjcDZSSHpKNTJsNWdjQXpmSG9yZWVXbWtMTTdhQzJ3IiwieSI6IlQ2SFB5OWZnN1FOV2RvTWt2UFVOajBLeFgtUVIzeS14NUdKbmtnc2hzZnMifX0sImV4cCI6MjA2Mzg5OTc1MywidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiXSwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsIjAwMDAwMDAwX2RlbW9fZHJpdmluZ2xpY2Vuc2VfMjAyNTA0MjUxNDE4Il0sImNyZWRlbnRpYWxTdGF0dXMiOnsidHlwZSI6IlN0YXR1c0xpc3QyMDIxRW50cnkiLCJpZCI6Imh0dHBzOi8vaXNzdWVyLXZjLndhbGxldC5nb3YudHcvYXBpL3N0YXR1cy1saXN0LzAwMDAwMDAwX2RlbW9fZHJpdmluZ2xpY2Vuc2VfMjAyNTA0MjUxNDE4L3IwIzE5Iiwic3RhdHVzTGlzdEluZGV4IjoiMTkiLCJzdGF0dXNMaXN0Q3JlZGVudGlhbCI6Imh0dHBzOi8vaXNzdWVyLXZjLndhbGxldC5nb3YudHcvYXBpL3N0YXR1cy1saXN0LzAwMDAwMDAwX2RlbW9fZHJpdmluZ2xpY2Vuc2VfMjAyNTA0MjUxNDE4L3IwIiwic3RhdHVzUHVycG9zZSI6InJldm9jYXRpb24ifSwiY3JlZGVudGlhbFNjaGVtYSI6eyJpZCI6Imh0dHBzOi8vZnJvbnRlbmQud2FsbGV0Lmdvdi50dy9hcGkvc2NoZW1hLzAwMDAwMDAwL2RlbW9kcml2aW5nbGljZW5zZTIwMjUwNDI1MTQxOC9WMS9iNjUzYWQ0Yi0zYjNhLTQ2ZjktYmVjMi1kNjg3Y2U5YzMyMjIiLCJ0eXBlIjoiSnNvblNjaGVtYSJ9LCJjcmVkZW50aWFsU3ViamVjdCI6eyJfc2QiOlsiLXUxU0NkeVdPdmtXTkxqWVUtZEdCLUNIOVFWTTRBaTJzS0p1aVluMFprbyIsIjlFM2JJRmM1Y0Y3VDZGNmowNUV5Y3NhUGxkbnRVNjJaT2JheC11VmJyQWMiLCJGbk40ME1mMGNwTWhrU0thYWFROUR2d1NEcndfbFB0SEdiS0NPNWtHWm1BIiwiV3B2Nm93b0NyMmY2X0ZpYnB4YXBHekVLY1gzYjMxcHNfaHBxRWZEMGJEMCIsIl9FUlltdkt6d1pjbzdQNzNoNE9McGczSzE3Y2t4TkFBZlpSeUFuYVdhYUEiLCJhMDVPSDFQUmF3cHF6OFM5TXlZbndTQnVtREYyZjU4QkJvZ1Fsc0tOVVBBIl0sIl9zZF9hbGciOiJzaGEtMjU2In19LCJub25jZSI6IktaQ0k3U1MzIiwianRpIjoiaHR0cHM6Ly9pc3N1ZXItdmMud2FsbGV0Lmdvdi50dy9hcGkvY3JlZGVudGlhbC8zZmQwMTE4Yy0yZDc3LTQ4M2UtOTRjYS1iMDAzMjdmNTllNzAifQ.OqGYU5HVhUCaLfg4hK1DU0XM78WzVxEl24fNKT6vNI8jFzDilb-HGpWQ1mrGWGvi-KOI_YQQ_R9ZWpypK8y_iw";
let sui =
  "eyJqa3UiOiJodHRwczovL2lzc3Vlci12Yy11YXQud2FsbGV0Lmdvdi50dy9hcGkva2V5cyIsImtpZCI6ImtleS0xIiwidHlwIjoidmMrc2Qtand0IiwiYWxnIjoiSFMyNTYifQ.eyJzdWIiOiJkaWQ6a2V5OnoyZG16RDgxY29mRGJyakxzWFNjREZxVDZpQ2ZRSGd0UlZlQUdoRkg1ZndhOEo2U0hhdWI3U0pQRHZuUFJna2t0NGFwcmNTdWM5QzJaeWJvMzNKTDhhWEg3NXc2QXllUjk1cUE3S2NDcXYzcjluemZBMVg4bkRDc1l4S2pZbXZhd1R2aUxZY1JtSktaZ0FGd1lZNjhXYURNRVNyTFZSZncxbmFBQXdOYm42Uk5neXpkaVUiLCJuYmYiOjE3NDg1MjAyNDksImlzcyI6ImRpZDprZXk6ejJkbXpEODFjZ1B4OFZraTdKYnV1TW1GWXJXUGdZb3l0eWtVWjNleXFodDFqOUtic1k5RFJxU0NnenpSdUZicHE5cXdKVExrQm5tbUJYaGRTZHE2QkRKUk14NnRDRzFqdGtkd2dLWE5mTjFxV0VSRHZ4YWM1clk2aGNuRlA3SHY2M2lNNXkzVnh0TU40VHN4eVp2Ym5yYXBXMlJwRm92RTFESjRtN2VEVkxTdXFHdGMxaSIsImNuZiI6eyJqd2siOnsia3R5IjoiRUMiLCJjcnYiOiJQLTI1NiIsIngiOiJjNGpRamNOdmtMaDkyUFhVVUVjSy1NWlZfZ2pIWlpDc0Y1bnVJa1IxMGwwIiwieSI6Ilh3bEh0SmdVZXVLRUprUnItNWpkOTdNVHdyeFNwTjJ3cFBQTXFuWXdvY00ifX0sImV4cCI6MTc3NDc4NTg0OSwidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiXSwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsIjAwMDAwMDAwX2FnZV92ZXJpZmljYXRpb24iXSwiY3JlZGVudGlhbFN0YXR1cyI6eyJ0eXBlIjoiU3RhdHVzTGlzdDIwMjFFbnRyeSIsImlkIjoiaHR0cHM6Ly9pc3N1ZXItdmMtdWF0LndhbGxldC5nb3YudHcvYXBpL3N0YXR1cy1saXN0LzAwMDAwMDAwX2FnZV92ZXJpZmljYXRpb24vcjAjMSIsInN0YXR1c0xpc3RJbmRleCI6IjEiLCJzdGF0dXNMaXN0Q3JlZGVudGlhbCI6Imh0dHBzOi8vaXNzdWVyLXZjLXVhdC53YWxsZXQuZ292LnR3L2FwaS9zdGF0dXMtbGlzdC8wMDAwMDAwMF9hZ2VfdmVyaWZpY2F0aW9uL3IwIiwic3RhdHVzUHVycG9zZSI6InJldm9jYXRpb24ifSwiY3JlZGVudGlhbFNjaGVtYSI6eyJpZCI6Imh0dHBzOi8vZnJvbnRlbmQtdWF0LndhbGxldC5nb3YudHcvYXBpL3NjaGVtYS8wMDAwMDAwMC9hZ2V2ZXJpZmljYXRpb24vVjEvYmU3NzA1ODktYWMwNi00NmI2LWE0ZTItODU1OWNmOTAxN2VhIiwidHlwZSI6Ikpzb25TY2hlbWEifSwiY3JlZGVudGlhbFN1YmplY3QiOnsiX3NkIjpbIkl6ZTlibDgzRmJUaXBlY05nS2VYN3owTjFvZUlWOWJkRzItSFJQd1FyUkkiLCJsNVpneDNPTkVpUHhxd1BINjhMejF4U2dDeTJ2b1o3MV9Wd1lHTWstbTlNIl0sIl9zZF9hbGciOiJzaGEtMjU2In19LCJub25jZSI6IjFROEcyU0pBIiwianRpIjoiaHR0cHM6Ly9pc3N1ZXItdmMtdWF0LndhbGxldC5nb3YudHcvYXBpL2NyZWRlbnRpYWwvNWRkNjE4ZWQtOGE1Yi00N2E4LTgyMjYtMjY3NjUyMjUyZTJkIn0.3DwCKxY796-UdMu0YBU0pahb4c_NCAOJR5Afay8Hfzk";

const keys = [
  {
    kty: "EC",
    crv: "P-256",
    x: "c4jQjcNvkLh92PXUUEcK-MZV_gjHZZCsF5nuIkR10l0",
    y: "XwlHtJgUeuKEJkRr-5jd97MTwrxSpN2wpPPMqnYwocM",
    kid: "key-1",
  },
  {
    kty: "EC",
    crv: "P-256",
    kid: "key-1",
    x: "dnQ2W9ZTsILYac3XdcvxrYNgIgjSkGJUMecMXVJk7XM",
    y: "0WhT_VgvnhNNj9aabTn4E4enR-iqbCrQtY9UWqD4XJY",
  },
  {
    kty: "EC",
    crv: "P-256",
    kid: "key-2",
    x: "9CNEmxkQimYxZtsoLuHyu2w_dHrVWrXapZzpYE0qm78",
    y: "1FNwzxeSbIAcMlsvtx3iGzyUwoAyldffbvshNooWy2Q",
  },
  {
    kty: "EC",
    crv: "P-256",
    kid: "key-1",
    x: "rJUIrWnliWn5brtxVJPlGNZl2hKTosVMlWDc-G-gScM",
    y: "mm3p9quG010NysYgK-CAQz2E-wTVSNeIHl_HvWaaM6I",
  },
  {
    kty: "EC",
    crv: "P-256",
    kid: "key-2",
    x: "9CNEmxkQimYxZtsoLuHyu2w_dHrVWrXapZzpYE0qm78",
    y: "1FNwzxeSbIAcMlsvtx3iGzyUwoAyldffbvshNooWy2Q",
  },
];

async function verifyJWTWithKeys(token, keys) {
  const [b64Header, b64Payload, b64Signature] = token.split(".");
  const header = JSON.parse(Buffer.from(b64Header, "base64url").toString("utf8"));
  const kid = header.kid;

  const key = keys.find((k) => k.kid === kid);
  if (!key) {
    console.error(`❌ No matching key for kid: ${kid}`);
    return false;
  }

  const message = `${b64Header}.${b64Payload}`;
  const messageBytes = new TextEncoder().encode(message);

  const sig = Buffer.from(b64Signature, "base64url");

  const jwk = {
    kty: key.kty,
    crv: key.crv,
    x: key.x,
    y: key.y,
    ext: true,
  };

  try {
    const cryptoKey = await crypto.subtle.importKey(
      "jwk",
      jwk,
      {
        name: "ECDSA",
        namedCurve: "P-256",
      },
      false,
      ["verify"]
    );

    const verified = await crypto.subtle.verify(
      {
        name: "ECDSA",
        hash: { name: "SHA-256" },
      },
      cryptoKey,
      sig,
      messageBytes
    );

    return verified;
  } catch (err) {
    console.error("Verification error:", err);
    return false;
  }
}

async function main() {
  const old_res = await verifyJWTWithKeys(newk, keys);
  const new_res = await verifyJWTWithKeys(latest_token, keys);
  const sui1 = await verifyJWTWithKeys(sui, keys);
  console.log("sui sig verify", sui1);

  console.log("old token sig verify", old_res);
  console.log("new token sig verify", new_res);
}
main();
